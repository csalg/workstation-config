---
- hosts: localhost
  # connection: local # If this is set to local it ignores the port for some reason
  become: true
  ignore_errors: yes

  vars:
    graphical: false
    dev: false
    personal: false
    x1gen10: false

  # TODO: pacman -Ssyuu maybe
  tasks:
    # - name: "Ansible | List all known variables and facts"
    #   debug:
    #     var: hostvars[inventory_hostname]

    - name: Install basic command-line tools
      community.general.pacman:
        name: "{{ item }}"
        state: present
      loop:
        - github-cli
        - jq
        - man-db
        - man-pages
        - docker
        - fd
        - pulseaudio
        - zoxide
        - bat
        - pcmanfm
        - python-scikit-learn
        - ansible
        - flameshot # screenshot capture tool
        - bluez-utils # cli interface for bluetooth (bluetoothcli)
        - blueman # applet for bluetooth
        - tmux
        - neovim
        - stow
        - fzf
        - ripgrep
        - ncurses
        - zsh
        - htop
        - python3
        - python-pip
        - taskell
        - zsh-autosuggestions
        - zsh-completions
        - grep
        - git
        - curl
        - gnutls
        - go
        - sudo
        - alacritty
        - wget
        - which
        - tree
        - ranger

    - name: Generate search db for manual pages
      shell: mandb

    - name: Change shell
      shell: chsh -s `which zsh`

    - name: Install zsh-autosuggestions
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: ~/.oh-my-zsh/custom/plugins

    - name: Install graphical stuff
      community.general.pacman:
        name: "{{ item }}"
        state: present
      loop:
        - libreoffice
        - zathura
        - thunderbird
        - sqlite
        - firefox
        - rofi
        - arandr
        - pavucontrol
        - barrier
        - i3lock
        - i3status
        - xclip
      when: graphical
      tags:
        - graphical

    - name: Install dev stuff
      community.general.pacman:
        name: "{{ item }}"
        state: present
      loop:
        - npm
        - yarn
        - kubectl
        - go
        - alacritty
        - go
        - pgcli
      when: dev
      tags:
        - dev

    - name: Install go tooling
      shell: "{{ item }}"
      become: no
      when: dev
      loop:
        - "go install github.com/vektra/mockery/v2@latest"
        - "go install mvdan.cc/gofumpt@latest"
        - "go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.47.3"
        - "go install gotest.tools/gotestsum@v1.8.1"
      tags:
        - gotooling

    - name: Install personal stuff
      community.general.pacman:
        name: "{{ item }}"
        state: present
      loop:
        - telegram-desktop
        - shadowsocks-qt5
        - darktable
        - calibre
      when: personal

    - name: Install stuff using `pip`
      pip:
        name: "{{ item }}"
      loop:
        - jupyter
        - numpy
        - matplotlib
        - seaborn
        - flask
        - tabulate # Needed for `food`
      tags:
        - pip

    - name: Enable services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
        masked: no
      loop:
        - docker
        - systemd-networkd
        - iwd
        - sshd
        - bluetooth
      tags:
        - systemd

    - name: "Add {{ ansible_user }} to docker group"
      user:
        name: "{{ ansible_user }}"
        shell: "/bin/bash"
        groups:
          - "{{ ansible_user }}"
          - docker
          - wheel
        append: yes
      tags:
        - docker

    - name: Audio (Thinkpad X1 Carbon 10 gen)
      shell: "pacmd load-module module-alsa-source device=hw:0,6"
      when: x1gen10
      # After running this need to open `alsamixer` and unmute

    - name: Markserv
      community.general.npm:
        name: markserv
        global: yes
      tags:
        - markserv
      become: no
      when: dev

    - name: redshift
      community.general.pacman:
        name: "{{ item }}"
        state: present
      loop:
        - redshift
      when: graphical
      tags:
        - redshift
    # i think this is not needed: just use CUPS
    # - name: hardware
    #   when: hardware
    #   tags:
    #     -hardware
    #   community.general.pacman:
    #     name: "{{ item }}"
    #     state: present
    #   loop:
    #     - hplib # needed for HP 1022
